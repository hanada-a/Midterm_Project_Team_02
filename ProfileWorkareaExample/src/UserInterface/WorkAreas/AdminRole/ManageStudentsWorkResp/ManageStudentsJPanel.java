/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 * @author Akira Hanada
 */
package UserInterface.WorkAreas.AdminRole.ManageStudentsWorkResp;

import Business.Business;
import Business.Person.Person;
import Business.Profiles.StudentDirectory;
import Business.Profiles.StudentProfile;

import javax.swing.JPanel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Akira Hanada
 */
public class ManageStudentsJPanel extends javax.swing.JPanel {

    JPanel CardSequencePanel;
    Business business;
    StudentProfile selectedStudent;

    public ManageStudentsJPanel(Business bz, JPanel jp) {
        CardSequencePanel = jp;
        this.business = bz;
        initComponents();
        refreshTable();
    }

    /**
     * Refresh the table with all students
     * @author Akira Hanada
     */
    public void refreshTable() {
        // Clear table
        int rc = StudentTable.getRowCount();
        for (int i = rc - 1; i >= 0; i--) {
            ((DefaultTableModel) StudentTable.getModel()).removeRow(i);
        }

        StudentDirectory sd = business.getStudentDirectory();
        
        for (StudentProfile sp : sd.getStudentList()) {
            Person person = sp.getPerson();
            Object[] row = new Object[6];
            row[0] = sp; // StudentProfile object
            row[1] = person.getPersonId();
            row[2] = person.getName();
            row[3] = person.getEmail();
            row[4] = person.getPhone();
            row[5] = person.getAddress();

            ((DefaultTableModel) StudentTable.getModel()).addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        StudentTable = new javax.swing.JTable();
        Back = new javax.swing.JButton();
        ViewButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(null);

        StudentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student", "Person ID", "Name", "Email", "Phone", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        StudentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                StudentTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(StudentTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(20, 80, 760, 160);

        Back.setText("<< Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        add(Back);
        Back.setBounds(20, 260, 76, 32);

        ViewButton.setBackground(new java.awt.Color(51, 153, 255));
        ViewButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ViewButton.setForeground(new java.awt.Color(255, 255, 255));
        ViewButton.setText("View/Edit");
        ViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewButtonActionPerformed(evt);
            }
        });
        add(ViewButton);
        ViewButton.setBounds(560, 260, 100, 32);

        DeleteButton.setBackground(new java.awt.Color(255, 51, 51));
        DeleteButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        DeleteButton.setForeground(new java.awt.Color(255, 255, 255));
        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });
        add(DeleteButton);
        DeleteButton.setBounds(670, 260, 100, 32);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Student Records");
        add(jLabel1);
        jLabel1.setBounds(20, 60, 190, 19);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Manage Student Records");
        add(jLabel2);
        jLabel2.setBounds(21, 20, 550, 29);
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // Navigate back to admin dashboard
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_BackActionPerformed

    private void ViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewButtonActionPerformed
        // Navigate to view/edit student - Author: Akira Hanada
        if (selectedStudent == null) {
            JOptionPane.showMessageDialog(this, 
                "Please select a student from the table first.", 
                "No Selection", 
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        AdministerStudentJPanel asp = new AdministerStudentJPanel(business, CardSequencePanel, selectedStudent, this);
        CardSequencePanel.add("AdministerStudent", asp);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_ViewButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // Delete selected student - Author: Akira Hanada
        if (selectedStudent == null) {
            JOptionPane.showMessageDialog(this, 
                "Please select a student from the table first.", 
                "No Selection", 
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // Confirm deletion
        int confirm = JOptionPane.showConfirmDialog(this, 
            "Are you sure you want to delete the student record for '" + selectedStudent.getPerson().getName() + "'?\n" +
            "This action cannot be undone.", 
            "Confirm Deletion", 
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE);
        
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                StudentDirectory sd = business.getStudentDirectory();
                sd.deleteStudent(selectedStudent.getPerson().getPersonId());
                
                JOptionPane.showMessageDialog(this, 
                    "Student record deleted successfully!", 
                    "Success", 
                    JOptionPane.INFORMATION_MESSAGE);
                
                // Refresh the table
                selectedStudent = null;
                refreshTable();
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, 
                    "Error deleting student record: " + e.getMessage(), 
                    "Delete Error", 
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void StudentTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StudentTableMousePressed
        // Select student from table - Author: Akira Hanada
        int selectedrow = StudentTable.getSelectedRow();
        if (selectedrow >= 0) {
            selectedStudent = (StudentProfile) StudentTable.getValueAt(selectedrow, 0);
        }
    }//GEN-LAST:event_StudentTableMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JTable StudentTable;
    private javax.swing.JButton ViewButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
